{"version":3,"sources":["components/common/useStyles/headerStyles.js","components/Header/Header.jsx","hoc/withSuspense.js","api/api.js","Utils/validators.js","components/common/Button/Button.jsx","components/common/passwordInput/PasswordInput.jsx","components/common/Input/Input.jsx","components/SignIn/SignInForm.jsx","components/SignIn/SignInContainer.jsx","components/SignUp/SignUpForm.jsx","components/SignUp/SignUpContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","headerWrapper","gridArea","backgroundColor","display","justifyContent","alignItems","item","margin","textDecoration","textAlign","Header","classes","className","to","Button","variant","color","withSuspense","Component","props","fallback","instance","axios","baseURL","signUpAPI","user","post","get","then","res","data","fieldValidator","fieldName","value","passwordValue","error","helperText","length","match","signUpFormValidator","newUser","email","a","users","isUser","some","signInFormValidator","input","password","emailValidator","correctEmail","correctPassword","passwordValidator","userToCheck","forEach","button","width","spacing","ButtonMaterial","type","onClick","buttonText","withoutLabel","marginTop","textField","fontFamily","fontSize","PasswordInput","React","useState","showPassword","values","setValues","FormControl","clsx","InputLabel","htmlFor","label","OutlinedInput","id","onChange","handleChange","autoComplete","endAdornment","InputAdornment","position","IconButton","aria-label","onMouseDown","event","preventDefault","edge","labelWidth","Input","TextField","placeholder","autocomplete","root","flexWrap","form","boxShadow","header","errorSubmit","SignInForm","emailCheckError","passwordCheckError","onSubmit","handleSubmit","errors","clearForm","SignInContainer","setErrors","setHelperText","setEmailCheckError","setPasswordCheckError","checkUser","clearFormFields","alert","formValid","valid","valueError","noError","Object","x","prop","persist","target","validation","console","SignUpForm","submitError","firstName","lastName","confirmPassword","SignUpContainer","setSubmitError","App","path","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.735a2f86.chunk.js","sourcesContent":["import {makeStyles} from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    headerWrapper: {\r\n        gridArea: \"1 / 1 / 2 / 6\",\r\n        backgroundColor: \"#dbe0f6\",\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        alignItems: \"center\"\r\n    },\r\n\r\n    item: {\r\n        margin: \"20px\",\r\n        textDecoration: \"none\",\r\n        textAlign: \"center\",\r\n    }\r\n}));\r\n\r\n\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {useStyles} from \"../common/useStyles/headerStyles\";\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div\r\n            className={classes.headerWrapper}>\r\n            <h1>SUP - 2</h1>\r\n            <NavLink to={'/signUp'} className={classes.item}>\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                    Sign Up\r\n                </Button>\r\n            </NavLink>\r\n\r\n            <NavLink to={'/signIn'} className={classes.item}>\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                    Sign In\r\n                </Button>\r\n            </NavLink>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Header;\r\n\r\n","import React, {Suspense} from \"react\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<div>Loading...</div>}><Component {...props}/></Suspense>\r\n    };\r\n};\r\n","import * as axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: `http://localhost:3004`\r\n})\r\n\r\nexport const signUpAPI = {\r\n    setUser(user) {\r\n        return instance.post(`/users`, user, {\r\n            'Content-Type': 'application/json'\r\n        })\r\n    },\r\n\r\n    getUsers(){\r\n        return  instance.get('/users').then(res=>res.data)\r\n    }\r\n\r\n}\r\n\r\n","import {signUpAPI} from \"../api/api\";\r\n\r\nexport const fieldValidator = (fieldName, value = '', passwordValue = '') => {\r\n    switch (fieldName) {\r\n        case 'firstName':\r\n        case 'lastName':\r\n            return (value === \"\")\r\n                ? {error: true, helperText: 'Field is empty'}\r\n                : ((value.length > 100)\r\n                    ? {error: true, helperText: 'Maximum 100 characters allowed'}\r\n                    : {error: false, helperText: ''})\r\n\r\n        case 'email':\r\n            return (value === \"\")\r\n                ? {error: true, helperText: 'Field is empty'}\r\n                : ((!value.match(\r\n                    /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n                ))\r\n                    ? {error: true, helperText: 'Enter valid email'}\r\n                    : {error: false, helperText: ''})\r\n\r\n        case 'password':\r\n\r\n            return (value === \"\")\r\n                ? {error: true, helperText: 'Field is empty'}\r\n                : ((!value.match(\r\n                        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,64}$/)\r\n                )\r\n                    ? {\r\n                        error: true,\r\n                        helperText: 'Password must include 8-64 characters: lowercase, uppercase, digit, symbol'\r\n                    }\r\n                    : {error: false, helperText: ''})\r\n\r\n        case 'confirmPassword':\r\n            return (value !== passwordValue)\r\n                ? {error: true, helperText: `Confirmed password doesn't match the password`}\r\n                : {error: false, helperText: ``}\r\n\r\n        default:\r\n    }\r\n}\r\n\r\nexport const signUpFormValidator = async (newUser, email) => {\r\n    let users = await signUpAPI.getUsers();\r\n    let isUser = users.some(user => user.email === email)\r\n    isUser && signUpAPI.setUser(newUser)\r\n    return isUser;\r\n}\r\n\r\nexport const signInFormValidator = async (input, email, password) => {\r\n    let users = await signUpAPI.getUsers();\r\n    let user = emailValidator(users, email) || \"\"\r\n    let correctEmail = users.some(user => user.email === email)\r\n    let correctPassword = passwordValidator(user, password)\r\n\r\n    return {\r\n        email: correctEmail,\r\n        password: correctPassword\r\n    }\r\n}\r\n\r\nconst emailValidator = (users, email) => {\r\n    let userToCheck;\r\n    users.forEach(user => user.email === email && (userToCheck = user))\r\n    return userToCheck;\r\n};\r\n\r\n\r\nconst passwordValidator = (user, password) => (user.password === password)\r\n","import React from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\n// import {useStyles} from \"../useStyles/signUpStyles\";\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        width: '100%',\r\n        margin: theme.spacing(1),\r\n\r\n    },\r\n\r\n}));\r\n\r\n\r\nexport const ButtonMaterial = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Button className={classes.button}\r\n                variant={props.variant}\r\n                color={props.color}\r\n                type={props.type}\r\n                onClick={props.onClick}\r\n        >\r\n            {props.buttonText}\r\n        </Button>\r\n    );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n      margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    withoutLabel: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    textField: {\r\n        width: '100ch',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n        error: {\r\n        color: '#f44336',\r\n        fontFamily: 'Roboto',\r\n        fontSize: \"12px\",\r\n        margin: \"3px 14px 0px\",\r\n\r\n    }\r\n}));\r\n\r\n\r\n\r\nexport const PasswordInput = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const [values, setValues] = React.useState({\r\n        showPassword: false,\r\n    });\r\n\r\n\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({...values, showPassword: !values.showPassword});\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n                <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\">\r\n                    <InputLabel htmlFor=\"outlined-adornment-password\">{props.label}</InputLabel>\r\n                    <OutlinedInput\r\n                        id={`outlined-adornment-${props.label}`}\r\n                        type={values.showPassword ? 'text' : 'password'}\r\n                        error={props.error}\r\n                        value={props.value || \"\"}\r\n                        onChange={props.handleChange}\r\n                        autoComplete=\"new-password\"\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                    aria-label=\"toggle password visibility\"\r\n                                    onClick={handleClickShowPassword}\r\n                                    onMouseDown={handleMouseDownPassword}\r\n                                    edge=\"end\"\r\n                                >\r\n                                    {values.showPassword ? <Visibility/> : <VisibilityOff/>}\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        }\r\n                        labelWidth= {props.labelWidth}\r\n                    />\r\n                    <p className={classes.error}\r\n                       id=\"outlined-basic-helper-text\">{props.helperText}</p>\r\n                </FormControl>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n// import {useStyles} from \"../useStyles/signUpStyles\";\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    withoutLabel: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    textField: {\r\n        width: '100ch',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    input: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    email: {\r\n        margin: theme.spacing(1),\r\n        width: '100ch',\r\n    },\r\n\r\n    error: {\r\n        color: '#f44336',\r\n        fontFamily: 'Roboto',\r\n        fontSize: \"12px\",\r\n        margin: \"3px 14px 0px\",\r\n\r\n    }\r\n}));\r\n\r\nexport const Input = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <TextField\r\n            className={props.classes}\r\n            id={`outlined-basic-${props.label}`}\r\n            label={props.label}\r\n            variant=\"outlined\"\r\n            value = {props.value || \"\"}\r\n            type={props.type}\r\n            placeholder={props.placeholder}\r\n            error={props.error}\r\n            helperText={props.helperText}\r\n            autoComplete={props.autocomplete || \"\"}\r\n            onChange={props.handleChange}\r\n        />\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {ButtonMaterial} from \"../common/Button/Button\";\r\nimport {PasswordInput} from \"../common/passwordInput/PasswordInput\";\r\nimport {Input} from \"../common/Input/Input\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    withoutLabel: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    textField: {\r\n        width: '100ch',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    input: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    email: {\r\n        margin: theme.spacing(1),\r\n        width: '100ch',\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        width: '500px',\r\n        justifyContent: 'space-between',\r\n        boxShadow: \"0px 5px 10px #555\"\r\n    },\r\n   error: {\r\n        color: '#f44336',\r\n        fontFamily: 'Roboto',\r\n        fontSize: \"12px\",\r\n        margin: \"3px 14px 0px\",\r\n    },\r\n    header: {\r\n        width: \"100%\",\r\n        textAlign: 'center',\r\n        fontFamily: \"Roboto\",\r\n    },\r\n    errorSubmit:{\r\n        color: \"red\",\r\n        width: \"100%\",\r\n        textAlign: \"center\"\r\n    }\r\n}));\r\n\r\nexport const SignInForm =(props)=> {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {(props.emailCheckError) && <h4 className={classes.errorSubmit}> This email is not registered. Please enter correct email or Sign In</h4>}\r\n            {(props.passwordCheckError) && <h4 className={classes.errorSubmit}> Wrong password</h4>}\r\n\r\n            <form className={classes.form} onSubmit={props.handleSubmit}>\r\n                <h1 className={classes.header}>Please Sign In</h1>\r\n\r\n                <Input\r\n                    classes={classes.email}\r\n                    label=\"Email\"\r\n                    placeholder={`example@gmail.com`}\r\n                    type='email'\r\n                    value={props.values.email}\r\n                    error={props.errors.email}\r\n                    helperText={props.helperText.email}\r\n                    handleChange={props.handleChange('email')}\r\n                />\r\n\r\n                <PasswordInput\r\n                    label='Password'\r\n                    placeholder='Password'\r\n                    value={props.values.password}\r\n                    error={props.errors.password}\r\n                    helperText={props.helperText.password}\r\n                    labelWidth={60}\r\n                    handleChange={props.handleChange(\"password\")}\r\n                />\r\n\r\n                <ButtonMaterial\r\n                    variant='contained'\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    buttonText={props.buttonText}\r\n                />\r\n\r\n                <ButtonMaterial\r\n                    variant='outlined'\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    onClick={props.onClick}\r\n                    buttonText={props.clearForm}\r\n\r\n                />\r\n            </form>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {fieldValidator, signInFormValidator} from \"../../Utils/validators\";\r\nimport {SignInForm} from \"./SignInForm\";\r\n\r\nexport const SignInContainer = () => {\r\n    const [values, setValues] = React.useState({\r\n        email: \"\",\r\n        password: '',\r\n    });\r\n    const [errors, setErrors] = React.useState(false);\r\n    const [helperText, setHelperText] = React.useState(false);\r\n    const [emailCheckError, setEmailCheckError] = React.useState(false);\r\n    const [passwordCheckError, setPasswordCheckError] = React.useState(false);\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        event.persist();\r\n        setValues(values => ({...values, [prop]: event.target.value}));\r\n        let validation = fieldValidator(prop, event.target.value, values.password)\r\n        setErrors(values => ({...values, [prop]: validation.error}));\r\n        setHelperText(values => ({...values, [prop]: validation.helperText}));\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        (formValid())\r\n            ? checkUser({\r\n                \"email\": `${values.email}`,\r\n                \"password\": `${values.password}`\r\n            })\r\n            : console.error(\"FORM INVALID\");\r\n    }\r\n\r\n\r\n    const checkUser = async (user) => {\r\n        setEmailCheckError(false);\r\n        setPasswordCheckError(false);\r\n        // setSubmitError(false);\r\n\r\n        let isUser = await signInFormValidator(user, values.email, values.password);\r\n        !isUser.email && setEmailCheckError(true);\r\n        !isUser.password && setPasswordCheckError(true);\r\n        (isUser.email && isUser.password) && clearFormFields();\r\n        isUser.email && isUser.password && alert(\"Login Success\");\r\n    }\r\n\r\n    const formValid = () => {\r\n        let valid = false\r\n        let valueError = true;\r\n        let noError = true;\r\n\r\n        Object.values(errors).forEach(x => x=== true && (valueError=!valueError));\r\n        Object.values(values).forEach(x => x === \"\" && (noError =!noError));\r\n\r\n        valueError && noError && (valid=!valid)\r\n\r\n        return valid;\r\n    }\r\n\r\n    const clearFormFields = () => {\r\n        setValues(false);\r\n        setErrors(false);\r\n        setHelperText(false)\r\n    }\r\n\r\n    return (\r\n        <SignInForm\r\n            handleChange={handleChange}\r\n            values={values}\r\n            onClick={clearFormFields}\r\n            errors={errors}\r\n            helperText={helperText}\r\n            handleSubmit={handleSubmit}\r\n            emailCheckError={emailCheckError}\r\n            passwordCheckError={passwordCheckError}\r\n            buttonText=\"Sign In\"\r\n            clearForm = 'Clear form'\r\n        />\r\n    )\r\n}","import React from 'react';\r\n// import {useStyles} from \"../common/useStyles/signUpStyles\";\r\nimport {ButtonMaterial} from \"../common/Button/Button\";\r\nimport {PasswordInput} from \"../common/passwordInput/PasswordInput\";\r\nimport {Input} from \"../common/Input/Input\";\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    withoutLabel: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    textField: {\r\n        width: '100ch',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    input: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    email: {\r\n        margin: theme.spacing(1),\r\n        width: '100ch',\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        width: '500px',\r\n        justifyContent: 'space-between',\r\n        boxShadow: \"0px 5px 10px #555\"\r\n    },\r\n    header: {\r\n        width: \"100%\",\r\n        textAlign: 'center',\r\n        fontFamily: \"Roboto\",\r\n    },\r\n    button: {\r\n        width: '100%',\r\n        margin: theme.spacing(1),\r\n\r\n    },\r\n    error: {\r\n        color: '#f44336',\r\n        fontFamily: 'Roboto',\r\n        fontSize: \"12px\",\r\n        margin: \"3px 14px 0px\",\r\n\r\n    },\r\n    errorSubmit: {\r\n        color: \"red\",\r\n        width: \"100%\",\r\n        textAlign: \"center\"\r\n    }\r\n}));\r\n\r\n\r\nexport const SignUpForm = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {(props.submitError) &&\r\n            <h4 className={classes.errorSubmit}> This email is already registered. Enter different email</h4>}\r\n            <form className={classes.form} onSubmit={props.handleSubmit}>\r\n                <h1 className={classes.header}>Please Sign Up</h1>\r\n                <Input\r\n                    classes={classes.input}\r\n                    label=\"First Name\"\r\n                    placeholder=\"John\"\r\n                    type='text'\r\n                    value={props.values.firstName}\r\n                    error={props.errors.firstName}\r\n                    helperText={props.helperText.firstName}\r\n                    handleChange={props.handleChange('firstName')}\r\n                />\r\n\r\n                <Input\r\n                    classes={classes.input}\r\n                    label=\"Last Name\"\r\n                    placeholder=\"Johnson\"\r\n                    type='text'\r\n                    value={props.values.lastName}\r\n                    error={props.errors.lastName}\r\n                    helperText={props.helperText.lastName}\r\n                    handleChange={props.handleChange('lastName')}\r\n                />\r\n\r\n                <Input\r\n                    classes={classes.email}\r\n                    label=\"Email\"\r\n                    placeholder={`example@gmail.com`}\r\n                    type='email'\r\n                    value={props.values.email}\r\n                    error={props.errors.email}\r\n                    helperText={props.helperText.email}\r\n                    handleChange={props.handleChange('email')}\r\n                />\r\n\r\n                <PasswordInput\r\n                    label='Password'\r\n                    placeholder='Password'\r\n                    value={props.values.password}\r\n                    error={props.errors.password}\r\n                    helperText={props.helperText.password}\r\n                    labelWidth={70}\r\n                    handleChange={props.handleChange(\"password\")}\r\n                />\r\n\r\n                <PasswordInput\r\n                    label='Confirm Password'\r\n                    placeholder='Confirm password'\r\n                    value={props.values.confirmPassword}\r\n                    error={props.errors.confirmPassword}\r\n                    helperText={props.helperText.confirmPassword}\r\n                    labelWidth={130}\r\n                    handleChange={props.handleChange('confirmPassword')}\r\n                />\r\n\r\n                <ButtonMaterial\r\n                    variant='contained'\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    buttonText={props.buttonText}\r\n                />\r\n\r\n                <ButtonMaterial\r\n                    variant='outlined'\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    onClick={props.onClick}\r\n                    buttonText={props.clearForm}\r\n\r\n                />\r\n            </form>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {SignUpForm} from \"./SignUpForm\";\r\nimport {fieldValidator, signUpFormValidator} from \"../../Utils/validators\";\r\n\r\n\r\nexport const SignUpContainer = () => {\r\n    const [values, setValues] = React.useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: \"\",\r\n        password: '',\r\n        confirmPassword: ''\r\n    });\r\n    const [errors, setErrors] = React.useState(false);\r\n    const [helperText, setHelperText] = React.useState(false);\r\n    const [submitError, setSubmitError] = React.useState(false);\r\n\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        event.persist();\r\n        setValues(values => ({...values, [prop]: event.target.value}));\r\n        let validation = fieldValidator(prop, event.target.value, values.password)\r\n        setErrors(values => ({...values, [prop]: validation.error}));\r\n        setHelperText(values => ({...values, [prop]: validation.helperText}));\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n            (formValid())\r\n            ? checkUser({\r\n                \"firstName\": `${values.firstName}`,\r\n                \"lastName\": `${values.lastName}`,\r\n                \"email\": `${values.email}`,\r\n                \"password\": `${values.password}`\r\n            })\r\n            : console.error(\"FORM INVALID\");\r\n    }\r\n\r\n    const checkUser = async (newUser) => {\r\n        setSubmitError(false);\r\n        let isUser = await signUpFormValidator(newUser, values.email).then(res => res)\r\n        isUser ? setSubmitError(true) : clearFormFields();\r\n        !isUser && alert(`NEW USER\r\n               FIRST NAME -  ${values.firstName}\r\n               LAST NAME -  ${values.lastName}\r\n               EMAIL -  ${values.email}\r\n               PASSWORD -  ${values.password}\r\n        `)\r\n    }\r\n\r\n    const formValid = () => {\r\n        let valid = false\r\n        let valueError = true;\r\n        let noError = true;\r\n\r\n        Object.values(errors).forEach(x => x=== true && (valueError=!valueError));\r\n        Object.values(values).forEach(x => x === \"\" && (noError =!noError));\r\n\r\n        valueError && noError && (valid=!valid)\r\n\r\n        return valid;\r\n    }\r\n\r\n\r\n    const clearFormFields = () => {\r\n        setValues(false);\r\n        setErrors(false);\r\n        setHelperText(false)\r\n    }\r\n\r\n    return (\r\n\r\n            <SignUpForm\r\n                submitError={submitError}\r\n                handleChange={handleChange}\r\n                values={values}\r\n                onClick={clearFormFields}\r\n                errors={errors}\r\n                helperText={helperText}\r\n                handleSubmit={handleSubmit}\r\n                buttonText=\"Sign Up\"\r\n                clearForm = 'Clear form'\r\n            />\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Header from \"./components/Header/Header\";\r\nimport {HashRouter, Route} from \"react-router-dom\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\nimport {SignInContainer} from \"./components/SignIn/SignInContainer\";\r\nimport {SignUpContainer} from \"./components/SignUp/SignUpContainer\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <HashRouter>\r\n            <div className='wrapper'>\r\n                <Header/>\r\n                <div className=\"content\">\r\n                    <h1>To proceed, please Sign In or Sign Up</h1>\r\n                    <Route path={'/signUp'}\r\n                           render={withSuspense(SignUpContainer)}/>\r\n                    <Route path={'/signIn'}\r\n                           render={withSuspense(SignInContainer)}/>\r\n                </div>\r\n            </div>\r\n        </HashRouter>\r\n    )\r\n};\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["components/common/Button/Button.jsx","components/common/passwordInput/SignUpContainer.jsx","components/common/Input/Input.jsx","components/SignUp/SignUpForm.jsx","components/SignUp/SignUpContainer.jsx","Utils/validators.js"],"names":["ButtonMaterial","props","classes","useStyles","Button","className","button","variant","color","type","onClick","text","PasswordInput","React","useState","showPassword","values","setValues","FormControl","clsx","margin","textField","InputLabel","htmlFor","label","OutlinedInput","id","error","value","onChange","handleChange","autoComplete","endAdornment","InputAdornment","position","IconButton","aria-label","onMouseDown","event","preventDefault","edge","labelWidth","helperText","Input","TextField","placeholder","autocomplete","SignUpForm","root","form","onSubmit","handleSubmit","header","input","firstName","errors","lastName","email","password","confirmPassword","SignUpContainer","setErrors","setHelperText","formValid","valid","Object","map","x","console","log","prop","persist","target","validation","fieldName","passwordValue","length","match","fieldValidator","alert"],"mappings":"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","file":"static/js/3.92c21096.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {useStyles} from \"../useStyles/loginStyles\";\r\n\r\n\r\nexport const ButtonMaterial = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Button className={classes.button}\r\n                variant={props.variant}\r\n                color={props.color}\r\n                type={props.type}\r\n                onClick={props.onClick}\r\n        >\r\n            {props.text}\r\n        </Button>\r\n    );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport {useStyles} from \"../useStyles/loginStyles\";\r\n\r\n\r\nexport const PasswordInput = (props) => {\r\n    // debugger;\r\n    const [values, setValues] = React.useState({\r\n        showPassword: false,\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({...values, showPassword: !values.showPassword});\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n                <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\">\r\n                    <InputLabel htmlFor=\"outlined-adornment-password\">{props.label}</InputLabel>\r\n                    <OutlinedInput\r\n                        id={`outlined-adornment-${props.label}`}\r\n                        type={values.showPassword ? 'text' : 'password'}\r\n                        error={props.error}\r\n                        value={props.value || \"\"}\r\n                        onChange={props.handleChange}\r\n                        autoComplete=\"new-password\"\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                    aria-label=\"toggle password visibility\"\r\n                                    onClick={handleClickShowPassword}\r\n                                    onMouseDown={handleMouseDownPassword}\r\n                                    edge=\"end\"\r\n                                >\r\n                                    {values.showPassword ? <Visibility/> : <VisibilityOff/>}\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        }\r\n                        labelWidth= {props.labelWidth}\r\n                    />\r\n                    <p className={classes.error}\r\n                       id=\"outlined-basic-helper-text\">{props.helperText}</p>\r\n                </FormControl>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {useStyles} from \"../useStyles/loginStyles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n\r\nexport const Input = (props) => {\r\n    const classes = useStyles();\r\n     return (\r\n        <TextField\r\n            className={props.classes}\r\n            id=\"outlined-basic-firstName\"\r\n            label={props.label}\r\n            variant=\"outlined\"\r\n            value = {props.value || \"\"}\r\n            type={props.type}\r\n            placeholder={props.placeholder}\r\n            error={props.error}\r\n            helperText={props.helperText}\r\n            autoComplete={props.autocomplete || \"\"}\r\n            onChange={props.handleChange}\r\n        />\r\n    );\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport {useStyles} from \"../common/useStyles/loginStyles\";\r\nimport {ButtonMaterial} from \"../common/Button/Button\";\r\nimport {PasswordInput} from \"../common/passwordInput/SignUpContainer\";\r\nimport {Input} from \"../common/Input/Input\";\r\n\r\n\r\nexport default function SignUpForm(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <form className={classes.form} onSubmit={props.handleSubmit}>\r\n                <h1 className={classes.header}>Please Sign Up</h1>\r\n\r\n                <Input\r\n                    classes={classes.input}\r\n                    label=\"First Name\"\r\n                    placeholder=\"John\"\r\n                    type='text'\r\n                    value={props.values.firstName}\r\n                    error={props.errors.firstName}\r\n                    helperText={props.helperText.firstName}\r\n                    handleChange={props.handleChange('firstName')}\r\n                />\r\n\r\n                <Input\r\n                    classes={classes.input}\r\n                    label=\"Last Name\"\r\n                    placeholder=\"Johnson\"\r\n                    type='text'\r\n                    value={props.values.lastName}\r\n                    error={props.errors.lastName}\r\n                    helperText={props.helperText.lastName}\r\n                    handleChange={props.handleChange('lastName')}\r\n                />\r\n\r\n                <Input\r\n                    classes={classes.email}\r\n                    label=\"Email\"\r\n                    placeholder={`example@gmail.com`}\r\n                    type='email'\r\n                    value={props.values.email}\r\n                    error={props.errors.email}\r\n                    helperText={props.helperText.email}\r\n                    handleChange={props.handleChange('email')}\r\n                />\r\n\r\n                <PasswordInput\r\n                    label='Password'\r\n                    placeholder='Password'\r\n                    value={props.values.password}\r\n                    error={props.errors.password}\r\n                    helperText={props.helperText.password}\r\n                    labelWidth={70}\r\n                    handleChange={props.handleChange(\"password\")}\r\n                />\r\n\r\n                <PasswordInput\r\n                    label='Confirm Password'\r\n                    placeholder='Confirm password'\r\n                    value={props.values.confirmPassword}\r\n                    error={props.errors.confirmPassword}\r\n                    helperText={props.helperText.confirmPassword}\r\n                    labelWidth={130}\r\n                    handleChange={props.handleChange('confirmPassword')}\r\n                />\r\n\r\n                <ButtonMaterial\r\n                    variant='contained'\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    text=\"Sign up\"\r\n                />\r\n\r\n                <ButtonMaterial\r\n                    variant='outlined'\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    onClick={props.onClick}\r\n                    text=\"Clear form\"\r\n\r\n                />\r\n            </form>\r\n        </div>\r\n    );\r\n}","import React, {useEffect} from 'react';\r\nimport SignUpForm from \"./SignUpForm\";\r\nimport {fieldValidator} from \"../../Utils/validators\";\r\n\r\nexport default function SignUpContainer() {\r\n    const [values, setValues] = React.useState({\r\n        firstName:'',\r\n        lastName:'',\r\n        password:'',\r\n        confirmPassword:''\r\n    });\r\n    const [errors, setErrors] = React.useState(false);\r\n    const [helperText, setHelperText] = React.useState(false);\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        event.persist();\r\n        setValues(values => ({...values, [prop]: event.target.value}));\r\n        let validation = fieldValidator(prop, event.target.value, values.password)\r\n        setErrors(values => ({...values, [prop]: validation.error}));\r\n        setHelperText(values => ({...values, [prop]: validation.helperText}));\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        (formValid()) ?\r\n            alert(`--SUBMITTING--\r\n               // First Name: ${values.firstName}\r\n               // Last Name: ${values.lastName}\r\n               // Email: ${values.email}\r\n               // Password: ${values.password}\r\n               // Confirmed Password ${values.confirmPassword}`)\r\n            : console.error(\"FORM INVALID\");\r\n    }\r\n\r\n    const formValid = () => {\r\n        let valid = false\r\n         Object.values(errors).map(x => {\r\n            (x === \"\") ? valid = true : valid = false\r\n        });\r\n        Object.values(values).map(x => {\r\n            (x === \"\") ? valid = false : valid = true\r\n        })\r\n        console.log(valid)\r\n        return valid;\r\n    }\r\n\r\n    return (\r\n        <SignUpForm\r\n            handleChange={handleChange}\r\n            values={values}\r\n            onClick={() => {\r\n                setValues(false)\r\n            }}\r\n            errors={errors}\r\n            helperText={helperText}\r\n            handleSubmit={handleSubmit}\r\n        />\r\n    )\r\n}","export const fieldValidator = (fieldName, value = '', passwordValue = '') => {\r\n    let errors;\r\n    switch (fieldName) {\r\n        case 'firstName':\r\n        case 'lastName':\r\n            return errors = (value === \"\")\r\n                ? {error: true, helperText: 'Field is empty'}\r\n                : ((value.length > 100)\r\n                    ? {error: true, helperText: 'Maximum 100 characters allowed'}\r\n                    : {error: false, helperText: ''})\r\n\r\n        case 'email':\r\n            return errors = (value === \"\")\r\n                ? {error: true, helperText: 'Field is empty'}\r\n                : ((!value.match(\r\n                    /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n                ))\r\n                    ? {error: true, helperText: 'Enter valid email'}\r\n                    : {error: false, helperText: ''})\r\n\r\n        case 'password':\r\n\r\n            return errors = (value === \"\")\r\n                ? {error: true, helperText: 'Field is empty'}\r\n                : ((!value.match(\r\n                        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,64}$/)\r\n                )\r\n                    ? {\r\n                        error: true,\r\n                        helperText: 'Password must include 8-64 characters: lowercase, uppercase, digit, symbol'\r\n                    }\r\n                    : {error: false, helperText: ''})\r\n\r\n        case 'confirmPassword':\r\n            return errors = (value !== passwordValue)\r\n                ? {error: true, helperText: `Confirmed password doesn't match the password`}\r\n                : {error: false, helperText: ``}\r\n\r\n        default:\r\n    }\r\n\r\n}\r\n"],"sourceRoot":""}
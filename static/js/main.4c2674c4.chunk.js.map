{"version":3,"sources":["components/common/useStyles/signUpStyles.js","components/common/Button/Button.jsx","Utils/validators.js","components/common/passwordInput/SignUpContainer.jsx","components/common/Input/Input.jsx","components/common/useStyles/headerStyles.js","components/Header/Header.jsx","hoc/withSuspense.js","components/common/useStyles/signInStyles.js","components/SignIn/SignIpForm.jsx","components/SignIn/SignInContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","justifyContent","flexWrap","margin","spacing","width","withoutLabel","marginTop","textField","input","email","form","boxShadow","header","textAlign","fontFamily","button","error","color","fontSize","headerWrapper","gridArea","backgroundColor","alignItems","item","textDecoration","ButtonMaterial","props","classes","className","variant","type","onClick","text","fieldValidator","fieldName","value","passwordValue","helperText","length","match","PasswordInput","React","useState","showPassword","values","setValues","clsx","htmlFor","label","id","onChange","handleChange","autoComplete","endAdornment","position","aria-label","onMouseDown","event","preventDefault","edge","labelWidth","Input","placeholder","autocomplete","Header","to","Button","withSuspense","Component","fallback","SignInForm","onSubmit","handleSubmit","errors","password","SignInContainer","setErrors","setHelperText","formValid","valid","Object","map","x","console","log","prop","persist","target","validation","alert","SignUpContainer","lazy","App","path","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.4c2674c4.chunk.js","sourcesContent":["import {makeStyles} from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    withoutLabel: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    textField: {\r\n        width: '100ch',\r\n    },\r\n    input: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    email: {\r\n        margin: theme.spacing(1),\r\n        width: '100ch',\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        width: '500px',\r\n        justifyContent: 'space-between',\r\n        boxShadow: \"0px 5px 10px #555\"\r\n    },\r\n    header: {\r\n        width: \"100%\",\r\n        textAlign: 'center',\r\n        fontFamily: \"Roboto\",\r\n    },\r\n    button: {\r\n        width: '100%',\r\n        margin: theme.spacing(1),\r\n\r\n    },\r\n    error: {\r\n        color: '#f44336',\r\n        fontFamily: 'Roboto',\r\n        fontSize: \"12px\",\r\n        margin: \"3px 14px 0px\",\r\n\r\n    },\r\n    headerWrapper: {\r\n        gridArea: \"1 / 1 / 2 / 6\",\r\n        backgroundColor: \"#dbe0f6\",\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        alignItems: \"center\"\r\n    },\r\n\r\n    item: {\r\n        margin: \"20px\",\r\n        textDecoration: \"none\",\r\n        textAlign: \"center\",\r\n    }\r\n}));\r\n\r\n\r\n","import React from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {useStyles} from \"../useStyles/signUpStyles\";\r\n\r\n\r\nexport const ButtonMaterial = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Button className={classes.button}\r\n                variant={props.variant}\r\n                color={props.color}\r\n                type={props.type}\r\n                onClick={props.onClick}\r\n        >\r\n            {props.text}\r\n        </Button>\r\n    );\r\n}\r\n\r\n\r\n","export const fieldValidator = (fieldName, value = '', passwordValue = '') => {\r\n    let errors;\r\n    switch (fieldName) {\r\n        case 'firstName':\r\n        case 'lastName':\r\n            return errors = (value === \"\")\r\n                ? {error: true, helperText: 'Field is empty'}\r\n                : ((value.length > 100)\r\n                    ? {error: true, helperText: 'Maximum 100 characters allowed'}\r\n                    : {error: false, helperText: ''})\r\n\r\n        case 'email':\r\n            return errors = (value === \"\")\r\n                ? {error: true, helperText: 'Field is empty'}\r\n                : ((!value.match(\r\n                    /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n                ))\r\n                    ? {error: true, helperText: 'Enter valid email'}\r\n                    : {error: false, helperText: ''})\r\n\r\n        case 'password':\r\n\r\n            return errors = (value === \"\")\r\n                ? {error: true, helperText: 'Field is empty'}\r\n                : ((!value.match(\r\n                        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,64}$/)\r\n                )\r\n                    ? {\r\n                        error: true,\r\n                        helperText: 'Password must include 8-64 characters: lowercase, uppercase, digit, symbol'\r\n                    }\r\n                    : {error: false, helperText: ''})\r\n\r\n        case 'confirmPassword':\r\n            return errors = (value !== passwordValue)\r\n                ? {error: true, helperText: `Confirmed password doesn't match the password`}\r\n                : {error: false, helperText: ``}\r\n\r\n        default:\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport {useStyles} from \"../useStyles/signUpStyles\";\r\n\r\n\r\nexport const PasswordInput = (props) => {\r\n    // debugger;\r\n    const [values, setValues] = React.useState({\r\n        showPassword: false,\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({...values, showPassword: !values.showPassword});\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n                <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\">\r\n                    <InputLabel htmlFor=\"outlined-adornment-password\">{props.label}</InputLabel>\r\n                    <OutlinedInput\r\n                        id={`outlined-adornment-${props.label}`}\r\n                        type={values.showPassword ? 'text' : 'password'}\r\n                        error={props.error}\r\n                        value={props.value || \"\"}\r\n                        onChange={props.handleChange}\r\n                        autoComplete=\"new-password\"\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                    aria-label=\"toggle password visibility\"\r\n                                    onClick={handleClickShowPassword}\r\n                                    onMouseDown={handleMouseDownPassword}\r\n                                    edge=\"end\"\r\n                                >\r\n                                    {values.showPassword ? <Visibility/> : <VisibilityOff/>}\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        }\r\n                        labelWidth= {props.labelWidth}\r\n                    />\r\n                    <p className={classes.error}\r\n                       id=\"outlined-basic-helper-text\">{props.helperText}</p>\r\n                </FormControl>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {useStyles} from \"../useStyles/signUpStyles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n\r\nexport const Input = (props) => {\r\n    const classes = useStyles();\r\n     return (\r\n        <TextField\r\n            className={props.classes}\r\n            id=\"outlined-basic-firstName\"\r\n            label={props.label}\r\n            variant=\"outlined\"\r\n            value = {props.value || \"\"}\r\n            type={props.type}\r\n            placeholder={props.placeholder}\r\n            error={props.error}\r\n            helperText={props.helperText}\r\n            autoComplete={props.autocomplete || \"\"}\r\n            onChange={props.handleChange}\r\n        />\r\n    );\r\n}\r\n","import {makeStyles} from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    headerWrapper: {\r\n        gridArea: \"1 / 1 / 2 / 6\",\r\n        backgroundColor: \"#dbe0f6\",\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        alignItems: \"center\"\r\n    },\r\n\r\n    item: {\r\n        margin: \"20px\",\r\n        textDecoration: \"none\",\r\n        textAlign: \"center\",\r\n    }\r\n}));\r\n\r\n\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {useStyles} from \"../common/useStyles/headerStyles\";\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div\r\n            className={classes.headerWrapper}>\r\n            <NavLink to={'/signUp'} className={classes.item}>\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                    Sign Up\r\n                </Button>\r\n            </NavLink>\r\n\r\n            <NavLink to={'/signIn'} className={classes.item}>\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                    Sign In\r\n                </Button>\r\n            </NavLink>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Header;\r\n\r\n","import React, {Suspense} from \"react\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<div>Loading...</div>}><Component {...props}/></Suspense>\r\n    };\r\n};\r\n","import {makeStyles} from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    withoutLabel: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    textField: {\r\n        width: '100ch',\r\n    },\r\n    input: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    email: {\r\n        margin: theme.spacing(1),\r\n        width: '100ch',\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        width: '500px',\r\n        justifyContent: 'space-between',\r\n        boxShadow: \"0px 5px 10px #555\"\r\n    },\r\n    header: {\r\n        width: \"100%\",\r\n        textAlign: 'center',\r\n        fontFamily: \"Roboto\",\r\n    },\r\n    button: {\r\n        width: '100%',\r\n        margin: theme.spacing(1),\r\n\r\n    },\r\n    error: {\r\n        color: '#f44336',\r\n        fontFamily: 'Roboto',\r\n        fontSize: \"12px\",\r\n        margin: \"3px 14px 0px\",\r\n\r\n    },\r\n    headerWrapper: {\r\n        gridArea: \"1 / 1 / 2 / 6\",\r\n        backgroundColor: \"#dbe0f6\",\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        alignItems: \"center\"\r\n    },\r\n\r\n    item: {\r\n        margin: \"20px\",\r\n        textDecoration: \"none\",\r\n        textAlign: \"center\",\r\n    }\r\n}));\r\n\r\n\r\n","import React from 'react';\r\nimport {ButtonMaterial} from \"../common/Button/Button\";\r\nimport {PasswordInput} from \"../common/passwordInput/SignUpContainer\";\r\nimport {Input} from \"../common/Input/Input\";\r\nimport {useStyles} from \"../common/useStyles/signInStyles\";\r\n\r\n\r\nexport const SignInForm =(props)=> {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <form className={classes.form} onSubmit={props.handleSubmit}>\r\n                <h1 className={classes.header}>Please Sign In</h1>\r\n\r\n                <Input\r\n                    classes={classes.email}\r\n                    label=\"Email\"\r\n                    placeholder={`example@gmail.com`}\r\n                    type='email'\r\n                    value={props.values.email}\r\n                    error={props.errors.email}\r\n                    helperText={props.helperText.email}\r\n                    handleChange={props.handleChange('email')}\r\n                />\r\n\r\n                <PasswordInput\r\n                    label='Password'\r\n                    placeholder='Password'\r\n                    value={props.values.password}\r\n                    error={props.errors.password}\r\n                    helperText={props.helperText.password}\r\n                    labelWidth={70}\r\n                    handleChange={props.handleChange(\"password\")}\r\n                />\r\n\r\n                <ButtonMaterial\r\n                    variant='contained'\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    text=\"Sign up\"\r\n                />\r\n\r\n                <ButtonMaterial\r\n                    variant='outlined'\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    onClick={props.onClick}\r\n                    text=\"Clear form\"\r\n\r\n                />\r\n            </form>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport {fieldValidator} from \"../../Utils/validators\";\r\nimport {SignInForm} from \"./SignIpForm\";\r\n\r\nexport const SignInContainer = ()=> {\r\n    const [values, setValues] = React.useState({\r\n        email:\"\",\r\n        password:'',\r\n    });\r\n    const [errors, setErrors] = React.useState(false);\r\n    const [helperText, setHelperText] = React.useState(false);\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        event.persist();\r\n        setValues(values => ({...values, [prop]: event.target.value}));\r\n        let validation = fieldValidator(prop, event.target.value, values.password)\r\n        setErrors(values => ({...values, [prop]: validation.error}));\r\n        setHelperText(values => ({...values, [prop]: validation.helperText}));\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        (formValid()) ?\r\n            alert(`--Log in--\r\n               // Email: ${values.email}\r\n               // Password: ${values.password}`)\r\n            : console.error(\"FORM INVALID\");\r\n    }\r\n\r\n    const formValid = () => {\r\n        let valid = false\r\n        Object.values(errors).map(x => {\r\n            (x === \"\") ? valid = true : valid = false\r\n        });\r\n        Object.values(values).map(x => {\r\n            (x === \"\") ? valid = false : valid = true\r\n        })\r\n        console.log(valid)\r\n        return valid;\r\n    }\r\n\r\n    return (\r\n        <SignInForm\r\n            handleChange={handleChange}\r\n            values={values}\r\n            onClick={() => {\r\n                setValues(false)\r\n            }}\r\n            errors={errors}\r\n            helperText={helperText}\r\n            handleSubmit={handleSubmit}\r\n        />\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Header from \"./components/Header/Header\";\r\nimport {HashRouter, Route} from \"react-router-dom\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\nimport {SignInContainer} from \"./components/SignIn/SignInContainer\";\r\n\r\n\r\nconst SignUpContainer = React.lazy(() => import(\"./components/SignUp/SignUpContainer\"));\r\n\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <HashRouter>\r\n            <div className='wrapper'>\r\n                <Header/>\r\n                <div className=\"content\">\r\n                    <h1>To proceed, please Sign In or Sign Up</h1>\r\n                    <Route path={'/signUp'}\r\n                           render={withSuspense(SignUpContainer)}/>\r\n                    <Route path={'/signIn'}\r\n                           render={withSuspense(SignInContainer)}/>\r\n                </div>\r\n\r\n            </div>\r\n        </HashRouter>\r\n    )\r\n};\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["components/common/useStyles/headerStyles.js","components/Header/Header.jsx","hoc/withSuspense.js","Utils/validators.js","components/common/useStyles/signUpStyles.js","components/common/Button/Button.jsx","components/common/passwordInput/SignUpContainer.jsx","components/common/Input/Input.jsx","components/SignIn/SignIpForm.jsx","components/SignIn/SignInContainer.jsx","components/SignUp/SignUpForm.jsx","components/SignUp/SignUpContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","headerWrapper","gridArea","backgroundColor","display","justifyContent","alignItems","item","margin","textDecoration","textAlign","Header","classes","className","to","Button","variant","color","withSuspense","Component","props","fallback","fieldValidator","fieldName","value","passwordValue","error","helperText","length","match","root","flexWrap","spacing","width","withoutLabel","marginTop","textField","input","email","form","boxShadow","header","fontFamily","button","fontSize","ButtonMaterial","type","onClick","text","PasswordInput","React","useState","showPassword","values","setValues","FormControl","clsx","InputLabel","htmlFor","label","OutlinedInput","id","onChange","handleChange","autoComplete","endAdornment","InputAdornment","position","IconButton","aria-label","onMouseDown","event","preventDefault","edge","labelWidth","Input","TextField","placeholder","autocomplete","SignInForm","onSubmit","handleSubmit","errors","password","SignInContainer","setErrors","setHelperText","formValid","valid","Object","map","x","console","log","prop","persist","target","validation","alert","SignUpForm","firstName","lastName","confirmPassword","SignUpContainer","App","path","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.04f25dcb.chunk.js","sourcesContent":["import {makeStyles} from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    headerWrapper: {\r\n        gridArea: \"1 / 1 / 2 / 6\",\r\n        backgroundColor: \"#dbe0f6\",\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        alignItems: \"center\"\r\n    },\r\n\r\n    item: {\r\n        margin: \"20px\",\r\n        textDecoration: \"none\",\r\n        textAlign: \"center\",\r\n    }\r\n}));\r\n\r\n\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {useStyles} from \"../common/useStyles/headerStyles\";\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div\r\n            className={classes.headerWrapper}>\r\n            <h1>SUP - 2</h1>\r\n            <NavLink to={'/signUp'} className={classes.item}>\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                    Sign Up\r\n                </Button>\r\n            </NavLink>\r\n\r\n            <NavLink to={'/signIn'} className={classes.item}>\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                    Sign In\r\n                </Button>\r\n            </NavLink>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Header;\r\n\r\n","import React, {Suspense} from \"react\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<div>Loading...</div>}><Component {...props}/></Suspense>\r\n    };\r\n};\r\n","export const fieldValidator = (fieldName, value = '', passwordValue = '') => {\r\n     switch (fieldName) {\r\n        case 'firstName':\r\n        case 'lastName':\r\n            return (value === \"\")\r\n                ? {error: true, helperText: 'Field is empty'}\r\n                : ((value.length > 100)\r\n                    ? {error: true, helperText: 'Maximum 100 characters allowed'}\r\n                    : {error: false, helperText: ''})\r\n\r\n        case 'email':\r\n            return (value === \"\")\r\n                ? {error: true, helperText: 'Field is empty'}\r\n                : ((!value.match(\r\n                    /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n                ))\r\n                    ? {error: true, helperText: 'Enter valid email'}\r\n                    : {error: false, helperText: ''})\r\n\r\n        case 'password':\r\n\r\n            return (value === \"\")\r\n                ? {error: true, helperText: 'Field is empty'}\r\n                : ((!value.match(\r\n                        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,64}$/)\r\n                )\r\n                    ? {\r\n                        error: true,\r\n                        helperText: 'Password must include 8-64 characters: lowercase, uppercase, digit, symbol'\r\n                    }\r\n                    : {error: false, helperText: ''})\r\n\r\n        case 'confirmPassword':\r\n            return (value !== passwordValue)\r\n                ? {error: true, helperText: `Confirmed password doesn't match the password`}\r\n                : {error: false, helperText: ``}\r\n\r\n        default:\r\n    }\r\n\r\n}\r\n","import {makeStyles} from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    withoutLabel: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    textField: {\r\n        width: '100ch',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    input: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    email: {\r\n        margin: theme.spacing(1),\r\n        width: '100ch',\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        width: '500px',\r\n        justifyContent: 'space-between',\r\n        boxShadow: \"0px 5px 10px #555\"\r\n    },\r\n    header: {\r\n        width: \"100%\",\r\n        textAlign: 'center',\r\n        fontFamily: \"Roboto\",\r\n    },\r\n    button: {\r\n        width: '100%',\r\n        margin: theme.spacing(1),\r\n\r\n    },\r\n    error: {\r\n        color: '#f44336',\r\n        fontFamily: 'Roboto',\r\n        fontSize: \"12px\",\r\n        margin: \"3px 14px 0px\",\r\n\r\n    }\r\n   }));\r\n\r\n\r\n","import React from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {useStyles} from \"../useStyles/signUpStyles\";\r\n\r\n\r\nexport const ButtonMaterial = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Button className={classes.button}\r\n                variant={props.variant}\r\n                color={props.color}\r\n                type={props.type}\r\n                onClick={props.onClick}\r\n        >\r\n            {props.text}\r\n        </Button>\r\n    );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport {useStyles} from \"../useStyles/signUpStyles\";\r\n\r\n\r\nexport const PasswordInput = (props) => {\r\n    const [values, setValues] = React.useState({\r\n        showPassword: false,\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({...values, showPassword: !values.showPassword});\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n                <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\">\r\n                    <InputLabel htmlFor=\"outlined-adornment-password\">{props.label}</InputLabel>\r\n                    <OutlinedInput\r\n                        id={`outlined-adornment-${props.label}`}\r\n                        type={values.showPassword ? 'text' : 'password'}\r\n                        error={props.error}\r\n                        value={props.value || \"\"}\r\n                        onChange={props.handleChange}\r\n                        autoComplete=\"new-password\"\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                    aria-label=\"toggle password visibility\"\r\n                                    onClick={handleClickShowPassword}\r\n                                    onMouseDown={handleMouseDownPassword}\r\n                                    edge=\"end\"\r\n                                >\r\n                                    {values.showPassword ? <Visibility/> : <VisibilityOff/>}\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        }\r\n                        labelWidth= {props.labelWidth}\r\n                    />\r\n                    <p className={classes.error}\r\n                       id=\"outlined-basic-helper-text\">{props.helperText}</p>\r\n                </FormControl>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n\r\nexport const Input = (props) => {\r\n     return (\r\n        <TextField\r\n            className={props.classes}\r\n            id={`outlined-basic-${props.label}`}\r\n            label={props.label}\r\n            variant=\"outlined\"\r\n            value = {props.value || \"\"}\r\n            type={props.type}\r\n            placeholder={props.placeholder}\r\n            error={props.error}\r\n            helperText={props.helperText}\r\n            autoComplete={props.autocomplete || \"\"}\r\n            onChange={props.handleChange}\r\n        />\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {ButtonMaterial} from \"../common/Button/Button\";\r\nimport {PasswordInput} from \"../common/passwordInput/SignUpContainer\";\r\nimport {Input} from \"../common/Input/Input\";\r\nimport {useStyles} from \"../common/useStyles/signUpStyles\";\r\n\r\n\r\nexport const SignInForm =(props)=> {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <form className={classes.form} onSubmit={props.handleSubmit}>\r\n                <h1 className={classes.header}>Please Sign In</h1>\r\n\r\n                <Input\r\n                    classes={classes.email}\r\n                    label=\"Email\"\r\n                    placeholder={`example@gmail.com`}\r\n                    type='email'\r\n                    value={props.values.email}\r\n                    error={props.errors.email}\r\n                    helperText={props.helperText.email}\r\n                    handleChange={props.handleChange('email')}\r\n                />\r\n\r\n                <PasswordInput\r\n                    label='Password'\r\n                    placeholder='Password'\r\n                    value={props.values.password}\r\n                    error={props.errors.password}\r\n                    helperText={props.helperText.password}\r\n                    labelWidth={60}\r\n                    handleChange={props.handleChange(\"password\")}\r\n                />\r\n\r\n                <ButtonMaterial\r\n                    variant='contained'\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    text=\"Sign up\"\r\n                />\r\n\r\n                <ButtonMaterial\r\n                    variant='outlined'\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    onClick={props.onClick}\r\n                    text=\"Clear form\"\r\n\r\n                />\r\n            </form>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport {fieldValidator} from \"../../Utils/validators\";\r\nimport {SignInForm} from \"./SignIpForm\";\r\n\r\nexport const SignInContainer = ()=> {\r\n    const [values, setValues] = React.useState({\r\n        email:\"\",\r\n        password:'',\r\n    });\r\n    const [errors, setErrors] = React.useState(false);\r\n    const [helperText, setHelperText] = React.useState(false);\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        event.persist();\r\n        setValues(values => ({...values, [prop]: event.target.value}));\r\n        let validation = fieldValidator(prop, event.target.value, values.password)\r\n        setErrors(values => ({...values, [prop]: validation.error}));\r\n        setHelperText(values => ({...values, [prop]: validation.helperText}));\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        (formValid()) ?\r\n            alert(`--Log in--\r\n               // Email: ${values.email}\r\n               // Password: ${values.password}`)\r\n            : console.error(\"FORM INVALID\");\r\n    }\r\n\r\n    const formValid = () => {\r\n        let valid = false\r\n        Object.values(errors).map(x => {\r\n            (x === \"\") ? valid = true : valid = false\r\n        });\r\n        Object.values(values).map(x => {\r\n            (x === \"\") ? valid = false : valid = true\r\n        })\r\n        console.log(valid)\r\n        return valid;\r\n    }\r\n\r\n    return (\r\n        <SignInForm\r\n            handleChange={handleChange}\r\n            values={values}\r\n            onClick={() => {\r\n                setValues(false)\r\n            }}\r\n            errors={errors}\r\n            helperText={helperText}\r\n            handleSubmit={handleSubmit}\r\n        />\r\n    )\r\n}","import React from 'react';\r\nimport {useStyles} from \"../common/useStyles/signUpStyles\";\r\nimport {ButtonMaterial} from \"../common/Button/Button\";\r\nimport {PasswordInput} from \"../common/passwordInput/SignUpContainer\";\r\nimport {Input} from \"../common/Input/Input\";\r\n\r\n\r\nexport const SignUpForm = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <form className={classes.form} onSubmit={props.handleSubmit}>\r\n                <h1 className={classes.header}>Please Sign Up</h1>\r\n\r\n                <Input\r\n                    classes={classes.input}\r\n                    label=\"First Name\"\r\n                    placeholder=\"John\"\r\n                    type='text'\r\n                    value={props.values.firstName}\r\n                    error={props.errors.firstName}\r\n                    helperText={props.helperText.firstName}\r\n                    handleChange={props.handleChange('firstName')}\r\n                />\r\n\r\n                <Input\r\n                    classes={classes.input}\r\n                    label=\"Last Name\"\r\n                    placeholder=\"Johnson\"\r\n                    type='text'\r\n                    value={props.values.lastName}\r\n                    error={props.errors.lastName}\r\n                    helperText={props.helperText.lastName}\r\n                    handleChange={props.handleChange('lastName')}\r\n                />\r\n\r\n                <Input\r\n                    classes={classes.email}\r\n                    label=\"Email\"\r\n                    placeholder={`example@gmail.com`}\r\n                    type='email'\r\n                    value={props.values.email}\r\n                    error={props.errors.email}\r\n                    helperText={props.helperText.email}\r\n                    handleChange={props.handleChange('email')}\r\n                />\r\n\r\n                <PasswordInput\r\n                    label='Password'\r\n                    placeholder='Password'\r\n                    value={props.values.password}\r\n                    error={props.errors.password}\r\n                    helperText={props.helperText.password}\r\n                    labelWidth={70}\r\n                    handleChange={props.handleChange(\"password\")}\r\n                />\r\n\r\n                <PasswordInput\r\n                    label='Confirm Password'\r\n                    placeholder='Confirm password'\r\n                    value={props.values.confirmPassword}\r\n                    error={props.errors.confirmPassword}\r\n                    helperText={props.helperText.confirmPassword}\r\n                    labelWidth={130}\r\n                    handleChange={props.handleChange('confirmPassword')}\r\n                />\r\n\r\n                <ButtonMaterial\r\n                    variant='contained'\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    text=\"Sign up\"\r\n                />\r\n\r\n                <ButtonMaterial\r\n                    variant='outlined'\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    onClick={props.onClick}\r\n                    text=\"Clear form\"\r\n\r\n                />\r\n            </form>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {SignUpForm} from \"./SignUpForm\";\r\nimport {fieldValidator} from \"../../Utils/validators\";\r\n\r\nexport const SignUpContainer = () => {\r\n    const [values, setValues] = React.useState({\r\n        firstName:'',\r\n        lastName:'',\r\n        password:'',\r\n        confirmPassword:''\r\n    });\r\n    const [errors, setErrors] = React.useState(false);\r\n    const [helperText, setHelperText] = React.useState(false);\r\n\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        event.persist();\r\n        setValues(values => ({...values, [prop]: event.target.value}));\r\n        let validation = fieldValidator(prop, event.target.value, values.password)\r\n        setErrors(values => ({...values, [prop]: validation.error}));\r\n        setHelperText(values => ({...values, [prop]: validation.helperText}));\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        (formValid()) ?\r\n            alert(`--SUBMITTING--\r\n               // First Name: ${values.firstName}\r\n               // Last Name: ${values.lastName}\r\n               // Email: ${values.email}\r\n               // Password: ${values.password}\r\n               // Confirmed Password ${values.confirmPassword}`)\r\n            : console.error(\"FORM INVALID\");\r\n    }\r\n\r\n    const formValid = () => {\r\n        let valid = false\r\n        Object.values(errors)\r\n            .map(x => {(x === \"\") ? valid = true : valid = false});\r\n        Object.values(values)\r\n            .map(x => {(x === \"\") ? valid = false : valid = true});\r\n\r\n        return valid;\r\n    }\r\n\r\n    return (\r\n        <SignUpForm\r\n            handleChange={handleChange}\r\n            values={values}\r\n            onClick={() => {\r\n                setValues(false)\r\n            }}\r\n            errors={errors}\r\n            helperText={helperText}\r\n            handleSubmit={handleSubmit}\r\n        />\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Header from \"./components/Header/Header\";\r\nimport {HashRouter, Route} from \"react-router-dom\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\nimport {SignInContainer} from \"./components/SignIn/SignInContainer\";\r\nimport {SignUpContainer} from \"./components/SignUp/SignUpContainer\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <HashRouter>\r\n            <div className='wrapper'>\r\n                <Header/>\r\n                <div className=\"content\">\r\n                    <h1>To proceed, please Sign In or Sign Up</h1>\r\n                    <Route path={'/signUp'}\r\n                           render={withSuspense(SignUpContainer)}/>\r\n                    <Route path={'/signIn'}\r\n                           render={withSuspense(SignInContainer)}/>\r\n                </div>\r\n            </div>\r\n        </HashRouter>\r\n    )\r\n};\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}